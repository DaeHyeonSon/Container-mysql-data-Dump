services:
  db:
    container_name: mysqldb
    image: mysql:latest
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: fisa
      MYSQL_USER: user01
      MYSQL_PASSWORD: user01
    networks:
      - spring-mysql-net
    volumes:
      - mysqldata:/var/lib/mysql
      - ./backup:/backup  # 백업 디렉터리 공유
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD']
      interval: 10s
      timeout: 2s
      retries: 100

  app:
    container_name: springbootapp
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8088:8088"
    environment:
      MYSQL_HOST: db  # DB 호스트 설정
    depends_on:
      db:
        condition: service_healthy
    networks:
      - spring-mysql-net

  newmysqldb:
    container_name: newmysqldb
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - newmysqldata:/var/lib/mysql
      - ./backup:/backup  # 동일한 백업 디렉터리 공유
    networks:
      - spring-mysql-net

networks:
  spring-mysql-net:
    driver: bridge

volumes:
  mysqldata:
  newmysqldata:

